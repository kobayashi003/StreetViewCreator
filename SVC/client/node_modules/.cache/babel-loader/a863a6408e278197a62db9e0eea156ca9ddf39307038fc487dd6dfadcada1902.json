{"ast":null,"code":"var _jsxFileName = \"/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const handleFileChange = event => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setFile(files[0]);\n    }\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (file) {\n      const formData = new FormData();\n      formData.append('image', file);\n      try {\n        const response = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Image upload success:', response.data);\n        // setImageUrl(response.data.url);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"fpWe64jzrNBShBLygxm4AzCVs5c=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUpload","_s","file","setFile","imageUrl","setImageUrl","handleFileChange","event","files","target","length","handleFormSubmit","preventDefault","formData","FormData","append","response","post","headers","console","log","data","error","children","onSubmit","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport axios from 'axios';\n\nconst ImageUpload: React.FC = () => {\n  const [file, setFile] = useState<File | null>(null);\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setFile(files[0]);\n    }\n  };\n\n  const handleFormSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    if (file) {\n      const formData = new FormData();\n      formData.append('image', file);\n\n      try {\n        const response = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Image upload success:', response.data);\n        // setImageUrl(response.data.url);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n        <button type=\"submit\">Upload Image</button>\n      </form>\n      {/* {imageUrl && <img src={imageUrl} alt=\"Uploaded\" />} */}\n    </div>\n  );\n};\n\nexport default ImageUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAgC,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAE7D,MAAMU,gBAAgB,GAAIC,KAAoC,IAAK;IACjE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BP,OAAO,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAOJ,KAAgB,IAAK;IACnDA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB,IAAIV,IAAI,EAAE;MACR,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,IAAI,CAAC;MAE9B,IAAI;QACF,MAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;UAC1EK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;QACnD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAMyB,QAAQ,EAAEb,gBAAiB;MAAAY,QAAA,gBAC/BxB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEpB,gBAAiB;QAACqB,MAAM,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEhC,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxCID,WAAqB;AAAAgC,EAAA,GAArBhC,WAAqB;AA0C3B,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}