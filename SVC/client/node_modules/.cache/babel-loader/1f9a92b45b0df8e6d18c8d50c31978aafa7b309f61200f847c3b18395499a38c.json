{"ast":null,"code":"var _jsxFileName = \"/frontend/src/DataDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/path/to/your/data.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setData(data)).catch(error => {\n      console.error('Error loading the data:', error);\n      setError('Failed to load data');\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Images and Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.image1,\n      alt: \"Image 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.image2,\n      alt: \"Image 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: X=\", data.location.x, \", Y=\", data.location.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Direction 0: X=\", data.direction0.x, \", Y=\", data.direction0.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Direction 1: X=\", data.direction1.x, \", Y=\", data.direction1.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Direction 2: X=\", data.direction2.x, \", Y=\", data.direction2.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Direction 3: X=\", data.direction3.x, \", Y=\", data.direction3.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DataDisplay, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DataDisplay","_s","data","setData","error","setError","fetch","then","response","ok","Error","json","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image1","alt","image2","location","x","y","direction0","direction1","direction2","direction3","_c","$RefreshReg$"],"sources":["/frontend/src/DataDisplay.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DataDisplay: React.FC = () => {\n  const [data, setData] = useState<ImageData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetch('/path/to/your/data.json')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => setData(data as ImageData))\n      .catch(error => {\n        console.error('Error loading the data:', error);\n        setError('Failed to load data');\n      });\n  }, []);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Images and Directions</h1>\n      <img src={data.image1} alt=\"Image 1\" />\n      <img src={data.image2} alt=\"Image 2\" />\n      <p>Location: X={data.location.x}, Y={data.location.y}</p>\n      <p>Direction 0: X={data.direction0.x}, Y={data.direction0.y}</p>\n      <p>Direction 1: X={data.direction1.x}, Y={data.direction1.y}</p>\n      <p>Direction 2: X={data.direction2.x}, Y={data.direction2.y}</p>\n      <p>Direction 3: X={data.direction3.x}, Y={data.direction3.y}</p>\n    </div>\n  );\n};\n\nexport default DataDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}