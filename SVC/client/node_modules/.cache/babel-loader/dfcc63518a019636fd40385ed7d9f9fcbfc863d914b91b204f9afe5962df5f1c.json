{"ast":null,"code":"var _jsxFileName = \"/frontend/src/DataDisplay.tsx\";\nimport React from 'react';\n\n// 方向を表す型（画像の各方向の座標）\n\n// 画像データとその位置情報を含む型\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = () => {\n  const imageData = data; // インポートしたデータを使用\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Images and Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageData.image1,\n      alt: \"Image 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageData.image2,\n      alt: \"Image 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: X=\", imageData.location[0], \", Y=\", imageData.location[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), Object.entries(imageData.photo_direction).map(([key, [x, y]]) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Direction \", key, \": X=\", x, \", Y=\", y]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataDisplay","imageData","data","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image1","alt","image2","location","Object","entries","photo_direction","map","key","x","y","_c","$RefreshReg$"],"sources":["/frontend/src/DataDisplay.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport pseudo_data from '../pseudo_data.json'; \ntype Coordinate = [number, number];\n\n// 方向を表す型（画像の各方向の座標）\ntype PhotoDirection = {\n  [direction: string]: Coordinate;\n};\n\n// 画像データとその位置情報を含む型\ntype ImageData = {\n  image1: string;\n  image2: string;\n  location: Coordinate;\n  photo_direction: PhotoDirection;\n};\n\nconst DataDisplay: React.FC = () => {\n    const imageData: ImageData = data;  // インポートしたデータを使用\n\n    return (\n        <div>\n            <h1>Images and Directions</h1>\n            <img src={imageData.image1} alt=\"Image 1\" />\n            <img src={imageData.image2} alt=\"Image 2\" />\n            <p>Location: X={imageData.location[0]}, Y={imageData.location[1]}</p>\n            {Object.entries(imageData.photo_direction).map(([key, [x, y]]) => (\n                <p key={key}>Direction {key}: X={x}, Y={y}</p>\n            ))}\n        </div>\n    );\n};\n\nexport default DataDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;;AAIlD;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAChC,MAAMC,SAAoB,GAAGC,IAAI,CAAC,CAAE;;EAEpC,oBACIH,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BR,OAAA;MAAKS,GAAG,EAAEP,SAAS,CAACQ,MAAO;MAACC,GAAG,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CR,OAAA;MAAKS,GAAG,EAAEP,SAAS,CAACU,MAAO;MAACD,GAAG,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CR,OAAA;MAAAI,QAAA,GAAG,cAAY,EAACF,SAAS,CAACW,QAAQ,CAAC,CAAC,CAAC,EAAC,MAAI,EAACX,SAAS,CAACW,QAAQ,CAAC,CAAC,CAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpEM,MAAM,CAACC,OAAO,CAACb,SAAS,CAACc,eAAe,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,GAAG,EAAE,CAACC,CAAC,EAAEC,CAAC,CAAC,CAAC,kBACzDpB,OAAA;MAAAI,QAAA,GAAa,YAAU,EAACc,GAAG,EAAC,MAAI,EAACC,CAAC,EAAC,MAAI,EAACC,CAAC;IAAA,GAAjCF,GAAG;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkC,CAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACa,EAAA,GAdIpB,WAAqB;AAgB3B,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}