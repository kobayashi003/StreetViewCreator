{"ast":null,"code":"var _jsxFileName = \"/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputFileRef = useRef(null);\n  const handleClickUpload = async () => {\n    var _inputFileRef$current;\n    const fileList = (_inputFileRef$current = inputFileRef.current) === null || _inputFileRef$current === void 0 ? void 0 : _inputFileRef$current.files;\n    if (!fileList) {\n      return;\n    }\n    const file = fileList[0];\n    const res = await createUploadImage(file);\n    console.log(res);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u753B\\u50CF\\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage,\n        alt: \"\\u753B\\u50CF\\u304C\\u9078\\u629E\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChangePreview,\n        ref: inputFileRef,\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _inputFileRef$current2;\n        return (_inputFileRef$current2 = inputFileRef.current) === null || _inputFileRef$current2 === void 0 ? void 0 : _inputFileRef$current2.click();\n      },\n      children: \"\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \"+       \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickUpload,\n      children: \"\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"x+pmQY1ZWGWhKdXwcVm/od/q4Rk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputFileRef","handleClickUpload","_inputFileRef$current","fileList","current","files","file","res","createUploadImage","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","src","previewImage","alt","type","onChange","handleChangePreview","ref","accept","style","display","onClick","_inputFileRef$current2","click","_c","$RefreshReg$"],"sources":["/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useRef } from 'react';\n\nfunction App() {\n\n  const inputFileRef = useRef<HTMLInputElement>(null);\n\n  const handleClickUpload = async () => {\n    const fileList = inputFileRef.current?.files;\n      if (!fileList) {\n        return;\n      }\n    const file = fileList[0];\n    const res = await createUploadImage(file);\n    console.log(res);\n  };\n\n  return (\n    <>\n      <h2>画像をアップロード</h2>\n      <div>\n        <img\n          src={previewImage}\n          alt=\"画像が選択されていません。\"\n        />\n        <input\n          type=\"file\"\n          onChange={handleChangePreview}\n          ref={inputFileRef}\n          accept=\"image/*\"\n          style={{ display: \"none\" }}\n        />\n      </div>\n      <button onClick={() => inputFileRef.current?.click()}>\n        ファイルを選択\n      </button>\n+       <button onClick={handleClickUpload}>アップロードする</button>\n    </>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,YAAY,GAAGP,MAAM,CAAmB,IAAI,CAAC;EAEnD,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,qBAAA;IACpC,MAAMC,QAAQ,IAAAD,qBAAA,GAAGF,YAAY,CAACI,OAAO,cAAAF,qBAAA,uBAApBA,qBAAA,CAAsBG,KAAK;IAC1C,IAAI,CAACF,QAAQ,EAAE;MACb;IACF;IACF,MAAMG,IAAI,GAAGH,QAAQ,CAAC,CAAC,CAAC;IACxB,MAAMI,GAAG,GAAG,MAAMC,iBAAiB,CAACF,IAAI,CAAC;IACzCG,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAClB,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QACEqB,GAAG,EAAEC,YAAa;QAClBC,GAAG,EAAC;MAAe;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFpB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEC,mBAAoB;QAC9BC,GAAG,EAAEtB,YAAa;QAClBuB,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAQ+B,OAAO,EAAEA,CAAA;QAAA,IAAAC,sBAAA;QAAA,QAAAA,sBAAA,GAAM3B,YAAY,CAACI,OAAO,cAAAuB,sBAAA,uBAApBA,sBAAA,CAAsBC,KAAK,CAAC,CAAC;MAAA,CAAC;MAAAjB,QAAA,EAAC;IAEtD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,YACP,eAAApB,OAAA;MAAQ+B,OAAO,EAAEzB,iBAAkB;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACvD,CAAC;AAEP;AAAChB,EAAA,CApCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}