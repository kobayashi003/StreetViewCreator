{"ast":null,"code":"var _jsxFileName = \"/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row, Typography, Input, Avatar, Button, Divider, Space, Tag } from 'antd';\nimport { UserOutlined, RobotOutlined, PlusOutlined, MessageOutlined, DeleteOutlined, SendOutlined } from '@ant-design/icons';\nimport { socket } from './socket'; // socket接続先の定義\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\n\n// メッセージの型\n\n// チャット部屋の型\n\nconst App = () => {\n  _s();\n  const [chatId, setChatId] = useState(null);\n  const [chatTitle, setChatTitle] = useState('');\n  const [chats, setChats] = useState([]);\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [message, setMessage] = useState();\n  const [messages, setMessages] = useState([]);\n\n  // チャット履歴を取得する非同期関数\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat-history/${chatId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch chat history');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      throw error;\n    }\n  };\n\n  // チャット部屋情報を取得する非同期関数\n  const fetchChat = async () => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat/${chatId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch chat history');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching chat:', error);\n      throw error;\n    }\n  };\n\n  // チャット部屋を削除する非同期関数\n  const deleteChat = async deletedChatId => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat/${deletedChatId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete chat');\n      }\n    } catch (error) {\n      console.error('Error deleting chat:', error);\n      throw error;\n    }\n  };\n\n  // チャット部屋一覧を取得する非同期関数\n  const fetchChats = async () => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch chats history');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n      throw error;\n    }\n  };\n\n  // 新しいチャット部屋を作成する非同期関数\n  const addNewChat = async () => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add new chat');\n      }\n      const _chatid = await response.json();\n      setChatId(_chatid);\n    } catch (error) {\n      console.error('Error adding new chat:', error);\n      throw error;\n    }\n  };\n\n  // チャット部屋を移動した時にデータを取得\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (chatId !== null) {\n          const _chat = await fetchChat();\n          setChatTitle(_chat.title);\n          socket.emit('join', {\n            room: chatId\n          });\n        }\n        const _chats = await fetchChats();\n        setChats(_chats);\n        const _messages = await fetchMessages();\n        setMessages(_messages);\n      } catch (error) {\n        console.log(\"historyの取得に失敗しました。\");\n        console.log(error);\n      }\n    };\n    fetchData();\n    return () => {\n      socket.emit('leave', {\n        room: chatId\n      });\n    };\n  }, [chatId]);\n\n  // サーバーとのソケット通信関連の副作用を処理\n  useEffect(() => {\n    const onConnect = () => {\n      setIsConnected(true);\n      chatId && socket.emit('join', {\n        room: chatId\n      });\n    };\n    const onDisconnect = () => {\n      setIsConnected(false);\n    };\n    const onMessageEvent = value => {\n      setMessages(previous => [...previous, value]);\n    };\n    socket.on('connect', onConnect);\n    socket.on('disconnect', onDisconnect);\n    socket.on('chatMessage', onMessageEvent);\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('disconnect', onDisconnect);\n      socket.off('chatMessage', onMessageEvent);\n    };\n  }, []);\n\n  // メッセージを送信\n  const sendMessage = () => {\n    socket.emit('chatMessage', message);\n    setMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      wrap: false,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        flex: \"250px\",\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"menu-item\",\n          type: \"text\",\n          onClick: addNewChat,\n          children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), \" \\u65B0\\u3057\\u3044\\u30C1\\u30E3\\u30C3\\u30C8\\u3092\\u8FFD\\u52A0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), chats.map((c, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"menu-chat-button\",\n            type: \"text\",\n            onClick: () => setChatId(c.id),\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), \" \", c.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"text\",\n            icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 23\n            }, this),\n            onClick: async () => {\n              await deleteChat(c.id);\n              const _chats = await fetchChats();\n              setChats(_chats);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        flex: \"auto\",\n        className: \"content\",\n        children: chatId === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'history-text history-human',\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: \"avatar-ai\",\n              icon: /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: ' チャットが選択されていません。\\n左メニューからチャットを追加、または、チャットを選択してください。'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-chat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [chatTitle, \" (id: \", chatId, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), isConnected ? /*#__PURE__*/_jsxDEV(Tag, {\n                bordered: false,\n                color: \"success\",\n                children: \"\\u63A5\\u7D9A\\u6E08\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n                bordered: false,\n                color: \"warning\",\n                children: \"\\u672A\\u63A5\\u7D9A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), messages.map((msg, index) => msg.type === 'ai' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'history-text history-ai',\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  className: \"avatar-ai\",\n                  icon: /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 28\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Text, {\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'history-text history-human',\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  className: \"avatar-human\",\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 67\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 28\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Text, {\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 88\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-input\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              align: \"bottom\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                flex: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n                  value: message ? message.message : '',\n                  onChange: e => setMessage({\n                    chatid: chatId,\n                    type: 'human',\n                    message: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                flex: \"20px\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"large\",\n                  shape: \"circle\",\n                  type: \"text\",\n                  onClick: sendMessage,\n                  icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 95\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fx056drd8Si98L0m26LsCY5PFxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Col","Row","Typography","Input","Avatar","Button","Divider","Space","Tag","UserOutlined","RobotOutlined","PlusOutlined","MessageOutlined","DeleteOutlined","SendOutlined","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","App","_s","chatId","setChatId","chatTitle","setChatTitle","chats","setChats","isConnected","setIsConnected","connected","message","setMessage","messages","setMessages","fetchMessages","response","fetch","import","meta","env","VITE_API_ENDPOINT","ok","Error","data","json","error","console","fetchChat","deleteChat","deletedChatId","method","fetchChats","addNewChat","_chatid","fetchData","_chat","title","emit","room","_chats","_messages","log","onConnect","onDisconnect","onMessageEvent","value","previous","on","off","sendMessage","children","wrap","flex","className","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","c","index","id","icon","bordered","color","msg","align","TextArea","onChange","e","chatid","target","size","shape","_c","$RefreshReg$"],"sources":["/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Col, Row, Typography, Input, Avatar, Button, Divider, Space, Tag } from 'antd';\nimport { UserOutlined, RobotOutlined, PlusOutlined, MessageOutlined, DeleteOutlined, SendOutlined } from '@ant-design/icons';\nimport { socket } from './socket'; // socket接続先の定義\nimport './App.css';\n\nconst { Text } = Typography;\n\n// メッセージの型\ntype Message = {\n  chatid: number;\n  type: string;\n  message: string;\n}\n\n// チャット部屋の型\ntype Chat = {\n  id: number;\n  createdAt: number;\n  title: string;\n}\n\nconst App:React.FC = () => {\n  const [chatId, setChatId] = useState<number | null>(null);\n  const [chatTitle, setChatTitle] = useState<string>('');\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [message, setMessage] = useState<Message | null>();\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  // チャット履歴を取得する非同期関数\n  const fetchMessages = async (): Promise<Message[]> => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat-history/${chatId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch chat history');\n      }\n      const data = await response.json() as Message[];\n      return data;\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      throw error;\n    }\n  }\n\n  // チャット部屋情報を取得する非同期関数\n  const fetchChat = async (): Promise<Chat> => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat/${chatId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch chat history');\n      }\n      const data = await response.json() as Chat;\n      return data;\n    } catch (error) {\n      console.error('Error fetching chat:', error);\n      throw error;\n    }\n  }\n\n  // チャット部屋を削除する非同期関数\n  const deleteChat = async (deletedChatId: number) => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat/${deletedChatId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete chat');\n      }\n    } catch (error) {\n      console.error('Error deleting chat:', error);\n      throw error;\n    }\n  }\n\n  // チャット部屋一覧を取得する非同期関数\n  const fetchChats = async (): Promise<Chat[]> => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch chats history');\n      }\n      const data = await response.json() as Chat[];\n      return data;\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n      throw error;\n    }\n  }\n\n  // 新しいチャット部屋を作成する非同期関数\n  const addNewChat = async () => {\n    try {\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/chat`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add new chat');\n      }\n      const _chatid = await response.json() as number;\n      setChatId(_chatid)\n    } catch (error) {\n      console.error('Error adding new chat:', error);\n      throw error;\n    }\n  }\n\n  // チャット部屋を移動した時にデータを取得\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (chatId !== null){\n          const _chat = await fetchChat();\n          setChatTitle(_chat.title);\n          socket.emit('join', { room: chatId });\n        }\n        const _chats = await fetchChats();\n        setChats(_chats)\n        const _messages = await fetchMessages();\n        setMessages(_messages);\n      } catch (error) {\n        console.log(\"historyの取得に失敗しました。\")\n        console.log(error)\n      }\n    }\n\n    fetchData();\n\n    return () => {\n      socket.emit('leave', { room: chatId });\n    };\n  }, [chatId]);\n\n  // サーバーとのソケット通信関連の副作用を処理\n  useEffect(() => {\n    const onConnect = () => {\n      setIsConnected(true);\n      chatId && socket.emit('join', { room: chatId });\n    }\n\n    const onDisconnect = () => {\n      setIsConnected(false);\n    }\n\n    const onMessageEvent = (value: Message)  => {\n      setMessages(previous => [...previous, value]);\n    }\n\n    socket.on('connect', onConnect);\n    socket.on('disconnect', onDisconnect);\n    socket.on('chatMessage', onMessageEvent);\n\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('disconnect', onDisconnect);\n      socket.off('chatMessage', onMessageEvent);\n    };\n  }, []);\n\n  // メッセージを送信\n  const sendMessage = () => {\n    socket.emit('chatMessage', message);\n    setMessage(null);\n  }\n\n  return (\n    <div>\n      <Row wrap={false}>\n        <Col flex=\"250px\" className='menu'>\n          <Button \n            className=\"menu-item\"\n            type=\"text\"\n            onClick={addNewChat}\n          >\n            <PlusOutlined /> 新しいチャットを追加\n          </Button>\n          <Divider />\n          {chats.map((c, index) => (\n            <div key={index} className=\"menu-item\">\n              <Button\n                className=\"menu-chat-button\"\n                type=\"text\"\n                onClick={() => setChatId(c.id)}\n              >\n                <MessageOutlined /> {c.title}\n              </Button>\n              <Button\n                type=\"text\"\n                icon={<DeleteOutlined/>}\n                onClick={async () =>  {\n                  await deleteChat(c.id);\n                  const _chats = await fetchChats();\n                  setChats(_chats)\n                }}\n              />\n            </div>\n          ))}\n        </Col>\n        <Col flex=\"auto\" className='content'>\n          {chatId === null ? (\n            <div className={'history-text history-human'}>\n              <Space>\n                <Avatar className=\"avatar-ai\" icon={<RobotOutlined />} />\n                <Text>\n                  {' チャットが選択されていません。\\n左メニューからチャットを追加、または、チャットを選択してください。'}\n                </Text>\n              </Space>\n            </div>\n          ) : (<>\n            <div className=\"content-chat\">\n              <div className=\"content-header\">\n                <h2>{chatTitle} (id: {chatId})</h2>\n                {isConnected ? (\n                  <Tag bordered={false} color=\"success\">接続済</Tag>\n                ) : (\n                  <Tag bordered={false} color=\"warning\">未接続</Tag>\n                )}\n              </div>\n              {messages.map((msg, index) => (\n                msg.type === 'ai' ? (\n                  <div key={index} className={'history-text history-ai'}>\n                    <Space><Avatar className=\"avatar-ai\" icon={<RobotOutlined />} /> <Text>{msg.message}</Text></Space>\n                  </div>\n                ) : (\n                  <div key={index} className={'history-text history-human'}>\n                    <Space><Avatar className=\"avatar-human\" icon={<UserOutlined />} /> <Text>{msg.message}</Text></Space>\n                  </div>\n                )\n              ))}\n            </div>\n            <div className=\"content-input\">\n              <Row align=\"bottom\">\n                <Col flex=\"auto\">\n                  <Input.TextArea\n                    value={message ?  message.message : ''}\n                    onChange={(e) => setMessage({\n                      chatid: chatId,\n                      type: 'human',\n                      message: e.target.value\n                    })}\n                  />\n                </Col>\n                <Col flex=\"20px\">\n                  <Button size=\"large\" shape=\"circle\" type=\"text\" onClick={sendMessage} icon={<SendOutlined />}></Button>\n                </Col>\n              </Row>\n            </div>\n          </>)}\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}